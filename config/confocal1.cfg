# Config file for a simple simulation of the core functions: Confocal, counter,
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    # Devices are defined in another config file:
    #hardware: readConfigFile('devices.cfg')
    remoteport: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
    timetaggerSlow:
        module.Class: 'timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_sum_channels: False

    timetaggerFast:
        module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_channel_sequence: 6
        timetagger_channel_detect: 7
        timetagger_sum_channels: True

    gem532:
        module.Class: 'laser.laserquantum_laser.LaserQuantumLaser'
        psu: SMD6000
        interface: 'COM1'
        maxpower: 0.1

    uwSource1:
        module.Class: 'microwave.mw_source_sgs.MicrowaveSGS'
        address: 'USB0::0x0AAD::0x0088::103670::INSTR'
        timeout: 10000

    pulsestreamer:
        module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer'
        pulsestreamer_ip: '192.168.1.100'
        laser_channel: 1
        uw_x_channel: 2

    nicard:
        module.Class: 'ni_card.NICard'
        clock_channel: '/Dev4/Ctr0'
        counter_channel: '/Dev4/Ctr1'
        scanner_clock_channel: '/Dev4/Ctr2'
        scanner_counter_channel: '/Dev4/Ctr3'
        photon_source: '/Dev4/PFI8'
        scanner_x_ao: '/Dev4/AO0'
        scanner_y_ao: '/Dev4/AO1'
        scanner_z_ao: '/Dev4/AO2'
        gate_in_channel: '/Dev4/PFI10'
        odmr_trigger_channel: '/Dev4/PFI0'
        counting_edge_rising: True
        clock_frequency: 100
        scanner_clock_frequency: 100
        x_range: [0, 20e-6]
        y_range: [0, 20e-6]
        z_range: [0, 20e-6]
        voltage_range: [0, 10]
        a_voltage_range: [0,10]
        samples_number: 50

logic:
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'nicard'
            savelogic: 'savelogic'

    counter_ttlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'timetaggerSlow'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'nicard'
            savelogic: 'savelogic'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'nicard'
            fitlogic: 'fitlogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimizer1: 'optimizerlogic'
            savelogic: 'savelogic'

    pulsedmasterlogic:
        module.Class: 'pulsed_master_logic.PulsedMasterLogic'
        direct_write: False
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'

    sequencegeneratorlogic:
        module.Class: 'sequence_generator_logic.SequenceGeneratorLogic'
        #overhead_bytes: 4294967296  Not properly implemented yet

    pulseextractionlogic:
        module.Class: 'pulse_extraction_logic.PulseExtractionLogic'

    pulseanalysislogic:
        module.Class: 'pulse_analysis_logic.PulseAnalysisLogic'

    pulsedmeasurementlogic:
        module.Class: 'pulsed_measurement_logic.PulsedMeasurementLogic'
        connect:
            fastcounter: 'timetaggerFast'
            pulseanalysislogic: 'pulseanalysislogic'
            pulseextractionlogic: 'pulseextractionlogic'
            pulsegenerator: 'pulsestreamer'
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            microwave: 'uwSource1'

    laserlogic:
        module.Class: 'laser_logic.LaserLogic'
        connect:
            laser: 'gem532'

    odmrcounterinterfuselogic:
        module.Class: 'interfuse.odmr_counter_microwave_interfuse.ODMRCounterMicrowaveInterfuse'
        connect:
            slowcounter: 'nicard'
            microwave: 'uwSource1'

    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        scanmode: 'SWEEP'
        connect:
            odmrcounter: 'odmrcounterinterfuselogic'
            fitlogic: 'fitlogic'
            microwave1: 'odmrcounterinterfuselogic'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        log_into_daily_directory: False
        win_data_directory: 'C:\Users\JAMS\Desktop\Shaz\qudi_data'
        unix_data_directory: 'Data/'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            scannerLocationRefocus:
                module: 'refocus'
                pausetasks: ['scan', 'odmr']
                needsmodules:
                    optimizer: 'optimizerlogic'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    counter_nicard:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    counter_timetagger:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counter_ttlogic'

    laser:
        module.Class: 'laser.laser.LaserGUI'
        connect:
            laserlogic: 'laserlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    poimanager:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanagerlogic'
            confocallogic1: 'scannerlogic'

    odmr:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmrlogic'
            savelogic: 'savelogic'

    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'
            savelogic: 'savelogic'