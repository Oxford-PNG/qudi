# Config file for a simple simulation of the core functions: Confocal, counter,
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    # Devices are defined in another config file:
    #hardware: readConfigFile('devices.cfg')
    remoteport: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
#    timetaggerSlow:
#        module.Class: 'timetagger_counter.TimeTaggerCounter'
#        timetagger_channel_apd_0: 0
#        timetagger_channel_apd_1: 1
#        timetagger_sum_channels: False
#
#    timetaggerFast:
#        module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
#        timetagger_channel_apd_0: 0
#        timetagger_channel_apd_1: 1
#        timetagger_channel_detect: 7
#        timetagger_channel_sequence: 6
#        timetagger_sum_channels: True


    timetagger:
        module.Class:  'swabian_instruments.timetagger.TimeTagger'
        channels:      { 'apd0' : 0, 'apd1' : 1, 'pulse' : 7, 'sequence' : 6, 'z' : 2 }
        combine:       { 'both' : [0, 1] }
        fast_click:    'both'
        fast_detect:   'pulse'
        fast_sequence: 'sequence'

    timetaggerSlow:
        module.Class: 'timetagger_counter.TimeTaggerCounter'
        channel_apd_0: 0
        channel_apd_1: 1
        sum_channels: False

    keysight1:
        module.Class: 'microwave.mw_source_keysight.MicrowaveKeysight'
        address: 'TCPIP0::10.0.2.3::inst0::INSTR'
        timeout: 10000
        trigger: 'TRIG2'

    temperature_dummy:
        module.Class: 'temperature_dummy.TemperatureDummy'
        temperature: 300

#    gem532:
#        module.Class: 'laser.laserquantum_laser.LaserQuantumLaser'
#        psu: SMD6000
#        interface: 'COM4'
#        maxpower: 0.1

    keysight1:
        module.Class: 'microwave.mw_source_keysight.MicrowaveKeysight'
        address: 'TCPIP0::192.168.1.101::inst0::INSTR'
        timeout: 10000
        trigger: 'TRIG2'

    pulsestreamer:
        module.Class: 'swabian_instruments.pulse_streamer.PulseStreamer'
        pulsestreamer_ip: '192.168.1.100'
        laser_channel: 1
        uw_x_channel: 2

    anc300:
        module.Class: 'anc300_stepper.Anc300'
        host: '10.0.2.2'
        port: 7230
        lua_port: 7231
        password: '123456'
        axes: { 'x':1, 'y':2, 'z':3 }
        voltage_range: [0,60]  # should change with temperature?
        frequency_range: [5,1200]
        offset_list: { 'std' : [ 0, 10, 20, 30, 40, 50, 60, 55, 45, 35, 25, 15, 5, 0 ] }

    nicard:
        module.Class: 'ni_card.NICard'
        clock_channel: '/Dev1/Ctr0' # internal assignments
        counter_channel: '/Dev1/Ctr1'
        scanner_clock_channel: '/Dev1/Ctr2'
        scanner_counter_channel: '/Dev1/Ctr3'
        photon_source: '/Dev1/PFI6' # from SPCM / combiner
        scanner_x_ao: '/Dev1/AO0'
        scanner_y_ao: '/Dev1/AO1'
        gate_in_channel: '/Dev1/PFI10'
        odmr_trigger_channel: '/Dev1/PFI0' # Keysight Source Settled
        counting_edge_rising: True
        clock_frequency: 100
        scanner_clock_frequency: 100
        x_range: [0, 50e-6]
        y_range: [0, 50e-6]
        voltage_range: [0, 10]
        x_voltage_range: [0, 4]
        y_voltage_range: [0, 4]
        samples_number: 50

logic:
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'nicard'
            savelogic: 'savelogic'

    counter_ttlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'timetaggerSlow'
            savelogic: 'savelogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'nicard'
            savelogic: 'savelogic'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'nicard'
            fitlogic: 'fitlogic'

    poimanagerlogic:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scannerlogic'
            optimizer1: 'optimizerlogic'
            savelogic: 'savelogic'

    pulsedmasterlogic:
        module.Class: 'pulsed_master_logic.PulsedMasterLogic'
        direct_write: False
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurementlogic'
            sequencegeneratorlogic: 'sequencegeneratorlogic'

    sequencegeneratorlogic:
        module.Class: 'sequence_generator_logic.SequenceGeneratorLogic'
        #overhead_bytes: 4294967296  Not properly implemented yet

    pulseextractionlogic:
        module.Class: 'pulse_extraction_logic.PulseExtractionLogic'

    pulseanalysislogic:
        module.Class: 'pulse_analysis_logic.PulseAnalysisLogic'

    pulsedmeasurementlogic:
        module.Class: 'pulsed_measurement_logic.PulsedMeasurementLogic'
        connect:
            fastcounter: 'timetaggerFast'
            pulseanalysislogic: 'pulseanalysislogic'
            pulseextractionlogic: 'pulseextractionlogic'
            pulsegenerator: 'pulsestreamer'
            fitlogic: 'fitlogic'
            savelogic: 'savelogic'
            microwave: 'keysight1'

    stepperlogic:
        module.Class: 'stepper_logic.StepperLogic'
        connect:
            stepper: 'anc300'

    laserlogic:
        module.Class: 'laser_logic.LaserLogic'
        connect:
            laser: 'gem532'

    odmrlogic:
        module.Class: 'odmr_logic.ODMRLogic'
        scanmode: 'SWEEP'
        connect:
            odmrcounter: 'nicard'
            fitlogic: 'fitlogic'
            microwave1: 'keysight1'
            savelogic: 'savelogic'
            taskrunner: 'tasklogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        log_into_daily_directory: False
        win_data_directory: 'Z:\Sample Data\Attocube'
        unix_data_directory: 'Data/'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'

    counter_nicard:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    counter_timetagger:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counter_ttlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        xy_only: True
        fixed_aspect_ratio_xy: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02

    stepper:
        module.Class: 'stepper.steppergui.StepperGui'
        connect:
            stepperlogic: 'stepperlogic'
        x_speed : { 'Normal' : [32,150], 'Slow' : [29,40], 'Fast' : [40,400] }
        y_speed : { 'Normal' : [32,150], 'Slow' : [29,40], 'Fast' : [40,400] }
        z_speed : { 'Normal' : [38,80], 'Slow' : [35,10], 'Fast' : [45,400] }

    poimanager:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanagerlogic'
            confocallogic1: 'scannerlogic'

    laser:
        module.Class: 'laser.laser.LaserGUI'
        connect:
            laserlogic: 'laserlogic'

    odmr:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmrlogic'
            savelogic: 'savelogic'

    pulsedmeasurement:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmasterlogic'
            savelogic: 'savelogic'